State 22 conflicts: 3 reduce/reduce
State 24 conflicts: 2 shift/reduce


Grammar

    0 $accept: stmts $end

    1 stmts: stmt
    2      | stmts stmt

    3 stmt: IDENT '=' expr ';'
    4     | IF '(' expr ')' stmt
    5     | IF '(' expr ')' stmts ELSE stmts

    6 expr: NUMBER
    7     | IDENT
    8     | expr '-' expr
    9     | expr '*' expr
   10     | '-' expr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 4 5
')' (41) 4 5
'*' (42) 9
'-' (45) 8 10
';' (59) 3
'=' (61) 3
error (256)
NUMBER (258) 6
IDENT (259) 3 7
IF (260) 4 5
ELSE (261) 5
IFPREC (262)
MINUS (263)


Nonterminals, with rules where they appear

$accept (15)
    on left: 0
stmts (16)
    on left: 1 2, on right: 0 2 5
stmt (17)
    on left: 3 4 5, on right: 1 2 4
expr (18)
    on left: 6 7 8 9 10, on right: 3 4 5 8 9 10


state 0

    0 $accept: . stmts $end

    IDENT  shift, and go to state 1
    IF     shift, and go to state 2

    stmts  go to state 3
    stmt   go to state 4


state 1

    3 stmt: IDENT . '=' expr ';'

    '='  shift, and go to state 5


state 2

    4 stmt: IF . '(' expr ')' stmt
    5     | IF . '(' expr ')' stmts ELSE stmts

    '('  shift, and go to state 6


state 3

    0 $accept: stmts . $end
    2 stmts: stmts . stmt

    $end   shift, and go to state 7
    IDENT  shift, and go to state 1
    IF     shift, and go to state 2

    stmt  go to state 8


state 4

    1 stmts: stmt .

    $default  reduce using rule 1 (stmts)


state 5

    3 stmt: IDENT '=' . expr ';'

    NUMBER  shift, and go to state 9
    IDENT   shift, and go to state 10
    '-'     shift, and go to state 11

    expr  go to state 12


state 6

    4 stmt: IF '(' . expr ')' stmt
    5     | IF '(' . expr ')' stmts ELSE stmts

    NUMBER  shift, and go to state 9
    IDENT   shift, and go to state 10
    '-'     shift, and go to state 11

    expr  go to state 13


state 7

    0 $accept: stmts $end .

    $default  accept


state 8

    2 stmts: stmts stmt .

    $default  reduce using rule 2 (stmts)


state 9

    6 expr: NUMBER .

    $default  reduce using rule 6 (expr)


state 10

    7 expr: IDENT .

    $default  reduce using rule 7 (expr)


state 11

   10 expr: '-' . expr

    NUMBER  shift, and go to state 9
    IDENT   shift, and go to state 10
    '-'     shift, and go to state 11

    expr  go to state 14


state 12

    3 stmt: IDENT '=' expr . ';'
    8 expr: expr . '-' expr
    9     | expr . '*' expr

    '-'  shift, and go to state 15
    '*'  shift, and go to state 16
    ';'  shift, and go to state 17


state 13

    4 stmt: IF '(' expr . ')' stmt
    5     | IF '(' expr . ')' stmts ELSE stmts
    8 expr: expr . '-' expr
    9     | expr . '*' expr

    '-'  shift, and go to state 15
    '*'  shift, and go to state 16
    ')'  shift, and go to state 18


state 14

    8 expr: expr . '-' expr
    9     | expr . '*' expr
   10     | '-' expr .

    $default  reduce using rule 10 (expr)


state 15

    8 expr: expr '-' . expr

    NUMBER  shift, and go to state 9
    IDENT   shift, and go to state 10
    '-'     shift, and go to state 11

    expr  go to state 19


state 16

    9 expr: expr '*' . expr

    NUMBER  shift, and go to state 9
    IDENT   shift, and go to state 10
    '-'     shift, and go to state 11

    expr  go to state 20


state 17

    3 stmt: IDENT '=' expr ';' .

    $default  reduce using rule 3 (stmt)


state 18

    4 stmt: IF '(' expr ')' . stmt
    5     | IF '(' expr ')' . stmts ELSE stmts

    IDENT  shift, and go to state 1
    IF     shift, and go to state 2

    stmts  go to state 21
    stmt   go to state 22


state 19

    8 expr: expr . '-' expr
    8     | expr '-' expr .
    9     | expr . '*' expr

    '*'  shift, and go to state 16

    $default  reduce using rule 8 (expr)


state 20

    8 expr: expr . '-' expr
    9     | expr . '*' expr
    9     | expr '*' expr .

    $default  reduce using rule 9 (expr)


state 21

    2 stmts: stmts . stmt
    5 stmt: IF '(' expr ')' stmts . ELSE stmts

    IDENT  shift, and go to state 1
    IF     shift, and go to state 2
    ELSE   shift, and go to state 23

    stmt  go to state 8


state 22

    1 stmts: stmt .
    4 stmt: IF '(' expr ')' stmt .

    $end      reduce using rule 4 (stmt)
    IDENT     reduce using rule 1 (stmts)
    IDENT     [reduce using rule 4 (stmt)]
    IF        reduce using rule 1 (stmts)
    IF        [reduce using rule 4 (stmt)]
    ELSE      reduce using rule 1 (stmts)
    ELSE      [reduce using rule 4 (stmt)]
    $default  reduce using rule 1 (stmts)


state 23

    5 stmt: IF '(' expr ')' stmts ELSE . stmts

    IDENT  shift, and go to state 1
    IF     shift, and go to state 2

    stmts  go to state 24
    stmt   go to state 4


state 24

    2 stmts: stmts . stmt
    5 stmt: IF '(' expr ')' stmts ELSE stmts .

    IDENT  shift, and go to state 1
    IF     shift, and go to state 2

    IDENT     [reduce using rule 5 (stmt)]
    IF        [reduce using rule 5 (stmt)]
    $default  reduce using rule 5 (stmt)

    stmt  go to state 8
